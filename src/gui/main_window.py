from PyQt6.QtGui import QFont
from PyQt6.QtWidgets import QMainWindow, QStackedWidget, QHBoxLayout, QLabel, QPushButton
from PyQt6.QtCore import Qt
from .menu_window import MenuWindow
from .visualizer_window import VisualizerWindow


class MainWindow(QMainWindow):
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""

    def __init__(self):
        super().__init__()
        self.init_ui()

    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞
        self.setWindowTitle("CodeVisualizer - –í–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä –∫–æ–¥–∞")
        self.setGeometry(100, 100, 1200, 800)  # x, y, —à–∏—Ä–∏–Ω–∞, –≤—ã—Å–æ—Ç–∞

        # –°–æ–∑–¥–∞–µ–º —Å—Ç–µ–∫–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏
        self.stacked_widget = QStackedWidget()
        self.setCentralWidget(self.stacked_widget)

        # –°–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω –º–µ–Ω—é
        self.menu_window = MenuWindow(self)
        self.stacked_widget.addWidget(self.menu_window)
        # –°–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
        self.visualizer_window = VisualizerWindow(self)
        self.stacked_widget.addWidget(self.visualizer_window)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        self.show_menu()

    def show_menu(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        self.stacked_widget.setCurrentWidget(self.menu_window)

    def show_visualizer(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä"""
        try:
            from .visualizer_window import VisualizerWindow
            if not hasattr(self, 'visualizer_window'):
                self.visualizer_window = VisualizerWindow(self)
                self.stacked_widget.addWidget(self.visualizer_window)
            self.stacked_widget.setCurrentWidget(self.visualizer_window)
        except Exception as e:
            print(f"ERROR –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä–∞: {e}")

    def show_tasks(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –æ–∫–Ω–æ –∑–∞–¥–∞–Ω–∏–π"""
        from .tasks_window import TasksWindow

        # –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ –∑–∞–¥–∞–Ω–∏–π –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
        if not hasattr(self, 'tasks_window'):
            self.tasks_window = TasksWindow(self)
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª –≤—ã–±–æ—Ä–∞ –∑–∞–¥–∞–Ω–∏—è
            self.tasks_window.task_selected.connect(self.open_task_in_visualizer)

        # –°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–¥–∞–Ω–∏—è
        self.menu_window.hide()
        self.tasks_window.show()
        self.setCentralWidget(self.tasks_window)

    def open_task_in_visualizer(self, theme: str, task_name: str, description: str):
        """–û—Ç–∫—Ä—ã—Ç—å –∑–∞–¥–∞–Ω–∏–µ –≤ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä–µ"""
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä—É
        self.show_visualizer()

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
        self.visualizer_window.set_task_description(theme, task_name, description)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω –∫–æ–¥–∞ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è
        self.load_task_template(theme, task_name)

    def load_task_template(self, theme: str, task_name: str):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–∞ –∫–æ–¥–∞ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è"""
        # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
        if hasattr(self, 'tasks_window'):
            for theme_data in self.tasks_window.tasks_data.get(theme, []):
                if theme_data['name'] == task_name:
                    template = theme_data.get('template', '# –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∫–æ–¥ –∑–¥–µ—Å—å\n')
                    self.visualizer_window.code_editor.setText(template)
                    break

    def show_tasks(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –æ–∫–Ω–æ –∑–∞–¥–∞–Ω–∏–π"""
        from .tasks_window import TasksWindow
        self.tasks_window = TasksWindow(self)

        # –î–û–ë–ê–í–¨ –≠–¢–£ –°–¢–†–û–ö–£:
        self.tasks_window.task_selected.connect(self.on_task_selected)

        self.stacked_widget.addWidget(self.tasks_window)
        self.stacked_widget.setCurrentWidget(self.tasks_window)

    def on_task_selected(self, theme: str, task_name: str, description: str):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∑–∞–¥–∞–Ω–∏—è"""
        print(f"DEBUG: –í—ã–±—Ä–∞–Ω–∞ –∑–∞–¥–∞—á–∞ - {theme}: {task_name}")

        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –æ–∫–Ω–æ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
        if not hasattr(self, 'visualizer_window'):
            from .visualizer_window import VisualizerWindow
            self.visualizer_window = VisualizerWindow(self)
            self.stacked_widget.addWidget(self.visualizer_window)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
        self.visualizer_window.set_task_description(theme, task_name, description)

        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä
        self.stacked_widget.setCurrentWidget(self.visualizer_window)

    def create_header(self, layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
        header_layout = QHBoxLayout()

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel("CodeVisualizer")
        title.setFont(QFont("Arial", 24, QFont.Weight.Bold))
        title.setStyleSheet("color: #2c3e50; margin: 20px 0;")
        header_layout.addWidget(title)

        # –†–∞—Å—Ç—è–≥–∏–≤–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
        header_layout.addStretch()

        # –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –≤—Å–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        reset_all_btn = QPushButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å")
        reset_all_btn.setStyleSheet("""
            QPushButton {
                background-color: #e74c3c;
                color: white;
                border: none;
                padding: 8px 15px;
                font-size: 12px;
                border-radius: 5px;
            }
            QPushButton:hover {
                background-color: #c0392b;
            }
        """)
        reset_all_btn.clicked.connect(self.reset_all_progress)
        header_layout.addWidget(reset_all_btn)

        layout.addLayout(header_layout)

    def reset_all_progress(self):
        """–°–±—Ä–æ—Å –≤—Å–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        from ..data.progress_manager import progress_manager
        from PyQt6.QtWidgets import QMessageBox

        reply = QMessageBox.question(
            self,
            '–°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞',
            '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –≤—Å–µ–º —Ç–µ–º–∞–º?',
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No,
            QMessageBox.StandardButton.No
        )

        if reply == QMessageBox.StandardButton.Yes:
            progress_manager.reset_progress()
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –æ–∫–Ω–µ –∑–∞–¥–∞–Ω–∏–π
            if hasattr(self, 'tasks_window') and self.tasks_window:
                self.tasks_window.refresh_ui()
            QMessageBox.information(self, "–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω", "–í–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω!")
